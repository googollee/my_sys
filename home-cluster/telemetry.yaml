version: "3"

x-base: &x-base
  restart: always

networks:
  default:
    name: gateway_default

services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    hostname: influxdb
    restart: always
    user: "root:root"
    labels:
      - 'traefik.http.routers.influx.rule=Host(`telemetry.zhaohai.li`) && !Path(`/ping`, `/metrics`)'
      - "traefik.http.routers.influx.entrypoints=https"
    healthcheck:
      test: "curl -f http://localhost:8086/ping || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - type: bind
        source: /share/System/config/influxdb/data
        target: /var/lib/influxdb2
      - type: bind
        source: /share/System/config/influxdb/config
        target: /etc/influxdb2
    expose:
      - "8086"

  prometheus:
    <<: *x-base
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    hostname: prometheus
    labels:
      - "traefik.http.routers.prometheus.ignore"
    user: nobody:nobody
    healthcheck:
      test: "wget --no-verbose --spider http://localhost:9090/-/ready || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: []
    command:
      - "/bin/sh"
      - "-c"
      - |
        echo "$${CONFIG}" > /home/prometheus.yml
        exec /bin/prometheus \
          --config.file=/home/prometheus.yml \
          --web.listen-address="0.0.0.0:9090" \
          --storage.tsdb.path=/prometheus/data \
          --storage.tsdb.retention.time=7d
    volumes:
      - /share/System/config/telemetry/prometheus:/prometheus
    environment:
      CONFIG: |
        global:
          scrape_interval: 15s
          evaluation_interval: 15s
        scrape_configs:
          - job_name: "prometheus"
            static_configs:
              - targets: ["localhost:9090"]

  loki:
    <<: *x-base
    image: grafana/loki:2.9.3
    container_name: loki
    hostname: loki
    labels:
      - "traefik.http.routers.loki.ignore"
    user: loki:nobody
    healthcheck:
      test: "wget --no-verbose --spider http://localhost:3100/ready || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    command:
      - "--compactor.retention-enabled"
      - "--config.file=/etc/loki/local-config.yaml"
      - "--store.retention=7d"
    volumes:
      - /share/System/config/telemetry/loki:/loki

  tempo:
    <<: *x-base
    image: grafana/tempo:2.3.1
    container_name: tempo
    hostname: tempo
    labels:
      - "traefik.http.routers.tempo.ignore"
    user: nobody:nobody
    healthcheck:
      test: "wget --no-verbose --spider http://localhost:8000/ready || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
    command:
      - "--compactor.compaction.block-retention=168h" # 7d
      - "--multitenancy.enabled=false"
      - "--target=all"
      - "--server.grpc-listen-port=4317"
      - "--server.http-listen-port=8000"
      - "--storage.trace.backend=local"
      - "--storage.trace.local.path=/var/tempo/data"
    volumes:
      - /share/System/config/telemetry/tempo:/var/tempo

  grafana:
    <<: *x-base
    image: grafana/grafana:10.2.3
    container_name: grafana
    hostname: grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.zhaohai.li`)"
      - "traefik.http.routers.grafana.entrypoints=https"
    user: grafana:nobody
    entrypoint: []
    command:
      - "/bin/sh"
      - "-c"
      - |
        mkdir -p /home/grafana/provisioning/datasources
        echo "$${DATA_SOURCE}" > /home/grafana/provisioning/datasources/datasource.yml
        exec /run.sh
    volumes:
      - /share/System/config/telemetry/grafana:/grafana
    expose:
      - 3000
    environment:
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
      GF_PATHS_DATA: /grafana/data
      GF_PATHS_LOGS: /grafana/logs
      GF_PATHS_PLUGINS: /grafana/plugins
      GF_PATHS_PROVISIONING: /home/grafana/provisioning
      DATA_SOURCE: |
        apiVersion: 1
        datasources:
          - uid: prometheus
            orgId: 1
            name: Prometheus
            type: prometheus
            typeName: Prometheus
            access: proxy
            url: http://prometheus:9090
            password: ''
            user: ''
            database: ''
            basicAuth: false
            isDefault: true
            jsonData:
              exemplarTraceIdDestinations:
                - datasourceUid: tempo
                  name: TraceID
              httpMethod: POST
            readOnly: false
            editable: false
          - uid: tempo
            orgId: 1
            name: Tempo
            type: tempo
            typeName: Tempo
            access: proxy
            url: http://tempo:8000
            password: ''
            user: ''
            database: ''
            basicAuth: false
            isDefault: false
            jsonData:
              nodeGraph:
                enabled: true
              search:
                hide: false
              lokiSearch:
                datasourceUid: loki
              tracesToLogsV2:
                datasourceUid: loki
                spanStartTimeShift: '1m'
                spanEndTimeShift: '-1m'
                filterBySpanID: false
                filterByTraceID: true
                tags:
                  - job
            readOnly: false
            editable: false
          - uid: loki
            orgId: 1
            name: Loki
            type: loki
            typeName: Loki
            access: proxy
            url: http://loki:3100
            password: ''
            user: ''
            database: ''
            basicAuth: false
            isDefault: false
            jsonData:
              derivedFields:
                - datasourceUid: tempo
                  matcherRegex: (?:trace_id)=(\w+)
                  name: TraceID
                  url: $${__value.raw}
            readOnly: false
            editable: false
