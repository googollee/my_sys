hostNetwork: true
deployment:
  enabled: true
  kind: DaemonSet
  replicas: 1
service:
  enabled: true
  single: true
  type: ClusterIP
updateStrategy:
  type: OnDelete
autoscaling:
  enabled: false
rbac:
  enabled: true
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
    add: [NET_BIND_SERVICE]
  readOnlyRootFilesystem: true
podSecurityContext:
  runAsGroup: 65535
  runAsNonRoot: false
  runAsUser: 0

env:
- name: CF_API_EMAIL
  valueFrom:
    secretKeyRef:
      name: cloudflare-api-token-secret
      key: api-email
- name: CF_API_KEY
  valueFrom:
    secretKeyRef:
      name: cloudflare-api-token-secret
      key: api-token

global:
  checkNewVersion: false
  sendAnonymousUsage: false
logs:
  general:
    level: INFO
    format: json
    noColor: true
  access:
    enabled: true
    format: json
metrics:
  prometheus:
    entryPoint: metrics

providers:
  kubernetesIngress:
    enabled: true
  kubernetesCRD:
    enabled: true
  kubernetesGateway:
    enabled: false
  file:
    enabled: false

ingressClass:
  enabled: true

gateway:
  enabled: false
  listeners:
    web:
      port: 80
      hostname: ""
      protocol: HTTP
      namespacePolicy:
    # websecure:
    #   port: 8443
    #   hostname:
    #   protocol: HTTPS
    #   namespacePolicy:
    #   certificateRefs:
    #   mode:

gatewayClass:
  enabled: false

ports:
  traefik:
    port: 18888
    expose:
      default: false
    exposedPort: 18888
    protocol: TCP
  metrics:
    port: 9100
    expose:
      default: false
    exposedPort: 9100
    protocol: TCP
  web:
    port: 80
    expose:
      default: true
    exposedPort: 80
  websecure:
    port: 443
    expose:
      default: true
    exposedPort: 443
    protocol: TCP
    tls:
      enabled: true
  wansecure:
    port: 8443
    expose:
      default: true
    exposedPort: 8443
    protocol: TCP
    tls:
      enabled: true

extraObjects:
- apiVersion: traefik.io/v1alpha1
  kind: Middleware
  metadata:
    name: wanauth
    namespace: infra-traefik
  spec:
    basicAuth:
      secret: wanauth

ingressRoute:
  dashboard:
    enabled: true
    entryPoints: [web, websecure]
    matchRule: Host(`gateway-p.zhaohai.li`) && PathPrefix(`/`)
    services:
    - name: api@internal
      kind: TraefikService
  wanprivate:
    enabled: true
    entryPoints: [wansecure]
    matchRule: HostRegexp(`[a-zA-Z\-_.]+-p\.zhaohai\.li`) && PathPrefix(`/`)
    middlewares:
    - name: wanauth
    services:
    - name: traefik
      kind: Service
      port: web
  wanpublic:
    enabled: true
    entryPoints: [wansecure]
    matchRule: HostRegexp(`[a-zA-Z\-_.]+([^-][^p]|[^-].|.[^p])\.zhaohai\.li`) && PathPrefix(`/`)
    services:
    - name: traefik
      kind: Service
      port: web

# certificatesResolvers:
#   zhaohai.li:
#     acme:
#       email: me@zhaohai.li
#       caServer: https://acme-v02.api.letsencrypt.org/directory
#       storage: "/data/acme.json"       # Path to store the certificate information.
#       dnsChallenge:
#         provider: cloudflare
#         resolvers: ["1.1.1.1"]
