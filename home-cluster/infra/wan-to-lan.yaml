apiVersion: v1
kind: ConfigMap
metadata:
  name: w2l-proxy
  namespace: infra
data:
  nginx.conf: |
    access_log /dev/stdout;
    error_log  /dev/stderr;

    server {
      listen       8080;
      server_name  _ default;
      location / {
        # Required to proxy the connection to Cockpit
        proxy_pass https://nas.zhaohai.li;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-Ip $http_cf_connecting_ip;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        gzip off;
        proxy_ssl_verify off;
      }
    }

    server {
      listen       8080;
      server_name  ~^(.+)-p.zhaohai.li$;
      auth_basic "Administratorâ€™s Area";
      auth_basic_user_file /etc/auth/users;
      location / {
        # Required to proxy the connection to Cockpit
        proxy_pass https://nas.zhaohai.li;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-Ip $http_cf_connecting_ip;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        gzip off;
        proxy_ssl_verify off;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: w2l-proxy
  namespace: infra
spec:
  type: ClusterIP
  selector:
    app: w2l-proxy
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: w2l-proxy
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: w2l-proxy
  template:
    metadata:
      labels:
        app: w2l-proxy
    spec:
      containers:
      - name: w2l-proxy
        image: nginxinc/nginx-unprivileged:latest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 65535
          runAsGroup: 65535
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: conf
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: wanauth
          mountPath: /etc/auth
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: conf
        configMap:
          name: w2l-proxy
          items:
          - key: nginx.conf
            path: default.conf
      - name: wanauth
        secret:
          secretName: wanauth
          items:
          - key: users
            path: users
      - name: tmp
        emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: w2l-proxy
  namespace: infra
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: wansecure
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - "zhaohai.li"
    - "*.zhaohai.li"
    secretName: tls-zhaohai-li-ingress-dns
  rules:
  - host: '*.zhaohai.li'
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: w2l-proxy
            port:
              number: 8080
