---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: infra
data:
  grafana.ini: |
    [analytics]
    check_for_updates = false

    [date_formats]
    default_timezone = Europe/Berlin

    [grafana_net]
    url = https://monitor.zhaohai.li

    [log]
    mode = console

    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

    [server]
    domain = monitor.zhaohai.li

    [smtp]
    enabled = true
    from_address = me+nas_alert@zhaohai.li
    from_name = Alert
    host = smtp.gmail.com:587
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      containers:
        - name: grafana
          image: "grafana/grafana:latest"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: service-admin
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-admin
                  key: admin-password
            - name: GF_SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: gmail-smtp
                  key: user
            - name: GF_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gmail-smtp
                  key: password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana"
            - name: storage
              mountPath: "/var/lib/grafana"
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: storage
          hostPath:
            path: /mnt/data/config/infra/grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: infra
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: grafana
  selector:
    app: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: infra
spec:
  rules:
    - host: "monitor.zhaohai.li"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80
