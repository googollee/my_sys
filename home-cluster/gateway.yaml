version: "3"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    hostname: traefik
    restart: always
    labels:
      - "traefik.http.routers.traefik.rule=HostRegexp(`[^a-z.]*`)"
    command:
      - "/bin/sh"
      - "-c"
      - |
        mkdir -p /etc/traefik
        echo "$${TRAEFIK_ROUTES_CONFIG}" > /etc/traefik/routes.yaml
        echo "$${TRAEFIK_CONFIG}" > /etc/traefik/config.yaml
        chmod 0600 /etc/host_config/acme.json
        export CF_DNS_API_TOKEN=$$(cat /etc/host_config/cloudflare_token)
        exec /usr/local/bin/traefik --configfile /etc/traefik/config.yaml
    volumes:
      - type: bind
        source: /share/System/config/acme.json
        target: /etc/host_config/acme.json
      - type: bind
        source: /share/System/config/cloudflare_token
        target: /etc/host_config/cloudflare_token
      - type: bind
        source: /share/System/config/wan_auth
        target: /etc/host_config/wan_auth
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    ports:
      - 80:80
      - 443:443
      - 8443:8443
    # healthcheck:
      # test: "wget --no-verbose --spider https://gateway-p.zhaohai.li/ping || exit 1"
      # interval: 5s
      # timeout: 10s
      # retries: 3
      # start_period: 30s
    environment:
      TRAEFIK_ROUTES_CONFIG: |
        http:
          routers:
            dashboard:
              entryPoints:
                - https
              rule: "Host(`gateway-p.zhaohai.li`)"
              service: "api@internal"
            ping:
              entryPoints:
                - https
              rule: "Host(`gateway-p.zhaohai.li`) && Path(`/ping`)"
              service: "ping@internal"
            traefik:
              entryPoints:
                - https
              rule: "Host(`gateway-p.zhaohai.li`) && Path(`/metrics`)"
              service: "prometheus@internal"
            nas:
              entryPoints:
                - https
              rule: "Host(`nas.zhaohai.li`)"
              service: "nas"
            wan-to-lan-public:
              entryPoints:
                - wan
              rule: "HostRegexp(`{subdomain:[a-z]+}.zhaohai.li`, `gts-w.zhaohai.li`)"
              service: "https-in-lan"
            wan-to-lan:
              entryPoints:
                - wan
              rule: "HostRegexp(`zhaohai.li`, `{subdomain:[a-z]+}-p.zhaohai.li`)"
              middlewares:
                - wan-auth
              service: "https-in-lan"
          middlewares:
            wan-auth:
              basicAuth:
                usersFile: "/etc/host_config/wan_auth"
          services:
            https-in-lan:
              loadBalancer:
                passHostHeader: true
                servers:
                  - url: "https://zhaohai.li"
            nas:
              loadBalancer:
                passHostHeader: true
                servers:
                  - url: "http://192.168.10.2:8080"
      TRAEFIK_CONFIG: |
        global:
          checkNewVersion: false
          sendAnonymousUsage: false
        api:
          insecure: false
          dashboard: true
          debug: false
        # log:
          # level: "debug"
        accessLog: {}
        ping:
          manualRouting: true
        providers:
          docker:
            endpoint: "unix:///var/run/docker.sock"
          file:
            directory: "/etc/traefik/"
            watch: false
            filename: "routes.yaml"
        entryPoints:
          http:
            address: ":80"
            http:
              redirections:
                entryPoint:
                  to: https
                  scheme: https
          https:
            address: ":443"
            http:
              tls:
                certResolver: letsencrypt
                domains:
                  - main: "zhaohai.li"
                    sans: 
                      - "*.zhaohai.li"
          wan:
            address: ":8443"
            http:
              tls:
                certResolver: letsencrypt
                domains:
                  - main: "zhaohai.li"
                    sans:
                      - "*.zhaohai.li"
        metrics:
          prometheus:
            entryPoint: https
            manualRouting: true
        certificatesResolvers:
          letsencrypt:
            acme:
              email: "i@googol.im"
              storage: "/etc/host_config/acme.json"
              caServer: "https://acme-v02.api.letsencrypt.org/directory"
              dnsChallenge:
                provider: cloudflare
                resolvers: 
                  - "1.1.1.1:53"
                  - "8.8.8.8:53"

  inadyn:
    image: alpine:3.18
    container_name: inadyn
    hostname: inadyn
    restart: always
    command:
      - "/bin/sh"
      - "-c"
      - |
        export CF_DNS_API_TOKEN=$$(cat /etc/host_config/cloudflare_token)
        apk add inadyn
        echo "$${INADYN_CONFIG}" | sed "s/cloudflare-token/$${CF_DNS_API_TOKEN}/g" > /root/config.conf
        exec inadyn --foreground --no-pidfile -f /root/config.conf
    volumes:
      - type: bind
        source: /share/System/config/cloudflare_token
        target: /etc/host_config/cloudflare_token
    environment:
      INADYN_CONFIG: |
        period     = 300
        user-agent = Mozilla/5.0
        provider cloudflare.com:1 {
            username = zhaohai.li
            password = cloudflare-token
            hostname = "zhaohai.li"
            ttl = 1 # optional, value of 1 is 'automatic'.
            proxied = true # optional.
        }
        provider cloudflare.com:2 {
            username = zhaohai.li
            password = cloudflare-token
            hostname = "*.zhaohai.li"
            ttl = 1 # optional, value of 1 is 'automatic'.
            proxied = true # optional.
        }
